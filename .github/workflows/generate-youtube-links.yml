name: Generate YouTube Links

on:
  push:
    paths:
      - 'metadata.json'
  workflow_dispatch:
  schedule:
    - cron: '*/35 * * * *' # every 35 minutes

concurrency:
  group: youtube-links-generator
  cancel-in-progress: true   # cancel running job when a new run starts

jobs:
  generate-links:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository (read-only)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Check if processing needed
        id: check
        run: |
          set -euo pipefail

          # If youtube-links.json exists, count entries, otherwise zero
          if [ -f youtube-links.json ]; then
            PROCESSED=$(jq 'length' youtube-links.json)
          else
            PROCESSED=0
          fi

          # Count total tracks in metadata.json
          TOTAL=$(jq '[.[].tracks // []] | add | length' metadata.json)

          echo "Processed: $PROCESSED / Total: $TOTAL"

          if [ "$PROCESSED" -lt "$TOTAL" ]; then
            echo "continue=true" >> "$GITHUB_OUTPUT"
            echo "Need to process more tracks"
          else
            echo "continue=false" >> "$GITHUB_OUTPUT"
            echo "All tracks processed!"
          fi

      - name: Set up Python
        if: steps.check.outputs.continue == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        if: steps.check.outputs.continue == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install yt-dlp requests

      - name: Generate YouTube links
        if: steps.check.outputs.continue == 'true'
        run: |
          set -euo pipefail
          # run your generator script which should write youtube-links.json
          python scripts/fetch_youtube_links.py

      # Checkout again with full history and credentials so we can push safely
      - name: Checkout repository (for push)
        if: steps.check.outputs.continue == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git user
        if: steps.check.outputs.continue == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push updated json (safe, retry + rebase)
        if: steps.check.outputs.continue == 'true'
        env:
          BRANCH: ${{ github.ref_name }}
          MAX_RETRIES: 5
        run: |
          set -euo pipefail

          # Stage the file(s)
          git add youtube-links.json || echo "no youtube-links.json to add"

          # If nothing staged, exit cleanly
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "chore: update youtube-links.json (generated by workflow)"

          attempt=0
          while [ "$attempt" -lt "$MAX_RETRIES" ]; do
            attempt=$((attempt+1))
            echo "Attempt $attempt/$MAX_RETRIES to push"

            # fetch remote and rebase local commit(s) on top of remote branch
            git fetch origin "$BRANCH"

            if git rev-parse --verify origin/"$BRANCH" >/dev/null 2>&1; then
              if ! git rebase origin/"$BRANCH"; then
                echo "Rebase failed; aborting rebase and retrying after backoff"
                git rebase --abort || true
                sleep $((attempt * 2))
                continue
              fi
            fi

            # Try push (fast-forward if possible)
            if git push origin HEAD:"$BRANCH"; then
              echo "Push succeeded"
              exit 0
            fi

            echo "Push failed (likely non-fast-forward). Retrying after backoff..."
            sleep $((attempt * 3))
          done

          echo "Max retries reached â€” attempting safe force push with lease"
          git push --force-with-lease origin HEAD:"$BRANCH"
